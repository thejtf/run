{"version":3,"file":"component---src-pages-404-jsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,KAAMG,OAAM,CAAG,IAAM,CACnB,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAGJ,kCAAe,EAAE,CAErD,mBACE,yDACE,wCACE,SAAS,CAAC,qCAAqC,CAC/C,KAAK,CAAE,CAAEK,SAAS,CAAE,MAAO,CAAE,eAE7B,wCAAK,SAAS,CAAC,gBAAgB,eAC7B,iCAAC,yBAAI,EAAC,EAAE,CAAEF,OAAQ,CAAC,SAAS,CAAC,UAAU,eACrC,6DACE,wCAAK,SAAS,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAED,IAAK,EAAG,CAClD,CACL,CACH,cACN,wCAAK,SAAS,CAAC,mBAAmB,EAC/BE,QAAQ,CAACE,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBACjB,sCACE,GAAG,CAAEA,CAAE,CACP,IAAI,CAAED,CAAC,CAACE,GAAI,CACZ,SAAS,CAAC,uCAAuC,EAEhDF,CAAC,CAACG,IAAI,CAEV,CAAC,CACE,CACF,CACF,CAEV,CAAC,CAED,wDAAeT,MAAM;;ACpCrB;AACA,mDAAe;AACf;AACA,CAAC,EAAC;;;ACKF,KAAMa,OAAM,CAAG,CAAC,CAAEC,QAAS,CAAC,GAAK,CAC/B,KAAM,CAAEC,SAAS,CAAEC,WAAY,CAAC,CAAGjB,kCAAe,EAAE,CAEpD,mBACE,yDACE,iCAAC,aAAM,EAAC,cAAc,CAAE,CAAEkB,KAAK,CAAEL,iBAAY,CAAE,eAC7C,yCAAM,IAAI,CAAC,IAAI,EAAG,cAClB,8CAAQG,SAAS,CAAS,cAC1B,yCAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAEC,WAAY,EAAG,cACjD,yCAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAG,cAC1C,yCACE,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,uDAAuD,EAC/D,CACK,cACT,iCAAC,iBAAM,MAAG,cACV,wCAAK,SAAS,CAAC,WAAW,EAAEF,QAAQ,CAAO,CACvC,CAEV,CAAC,CAEDD,MAAM,CAACM,SAAS,CAAG,CACjBL,QAAQ,CAAEJ,sCACZ,CAAC,CAED,wDAAeG,MAAM;;;;;;;;;;;AC/BrB,KAAMd,gBAAe,CAAG,IAAM,CAC5B,KAAM,CAAEwB,IAAK,CAAC,CAAGD,sDAAc,aAiB9B,CACD,MAAOC,KAAI,CAACC,YAAY,CAC1B,CAAC,CAED,iEAAezB,eAAe;;;;;;;;;;;;;;;ACpB9B,KAAM0B,aAAY,CAAG,IAAM,CACzB,KAAM,CAAEvB,OAAQ,CAAC,CAAGH,8EAAe,EAAE,CACrC,mBACE,2DAAC,sEAAM,mBACL,iEAAI,SAAS,CAAC,YAAY,QAAS,cACnC,+FAAmC,cACnC,gEAAG,SAAS,CAAC,WAAW,+CACqB,GAAG,cAC9C,gEAAG,SAAS,CAAC,aAAa,CAAC,IAAI,CAAEG,OAAQ,EACtCA,OAAO,CACN,CACF,CACG,CAEb,CAAC,CAED,iEAAeuB,YAAY","sources":["webpack://yihong.run/./src/components/Header/index.jsx","webpack://yihong.run/./src/components/Layout/style.module.scss","webpack://yihong.run/./src/components/Layout/index.jsx","webpack://yihong.run/./src/hooks/useSiteMetadata.js","webpack://yihong.run/./src/pages/404.jsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport useSiteMetadata from 'src/hooks/useSiteMetadata';\n\nconst Header = () => {\n  const { logo, siteUrl, navLinks } = useSiteMetadata();\n\n  return (\n    <div>\n      <nav\n        className=\"db flex justify-between w-100 ph5-l\"\n        style={{ marginTop: '3rem' }}\n      >\n        <div className=\"dib w-25 v-mid\">\n          <Link to={siteUrl} className=\"link dim\">\n            <picture>\n              <img className=\"dib w3 h3 br-100\" alt=\"logo\" src={logo} />\n            </picture>\n          </Link>\n        </div>\n        <div className=\"dib w-75 v-mid tr\">\n          {navLinks.map((n, i) => (\n            <a\n              key={i}\n              href={n.url}\n              className=\"light-gray link dim f6 f5-l mr3 mr4-l\"\n            >\n              {n.name}\n            </a>\n          ))}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","// Exports\nexport default {\n\t\"body\": \"style-module--body--a1572\"\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Header from 'src/components/Header';\nimport useSiteMetadata from 'src/hooks/useSiteMetadata';\nimport 'src/styles/index.scss';\nimport styles from './style.module.scss';\n\nconst Layout = ({ children }) => {\n  const { siteTitle, description } = useSiteMetadata();\n\n  return (\n    <div>\n      <Helmet bodyAttributes={{ class: styles.body }}>\n        <html lang=\"en\" />\n        <title>{siteTitle}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"keywords\" content=\"running\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n        />\n      </Helmet>\n      <Header />\n      <div className=\"pa3 pa5-l\">{children}</div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            siteTitle\n            siteUrl\n            description\n            logo\n            navLinks {\n              name\n              url\n            }\n          }\n        }\n      }\n    `\n  );\n  return site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","import React from 'react';\nimport Layout from 'src/components/Layout';\nimport useSiteMetadata from 'src/hooks/useSiteMetadata';\n\nconst NotFoundPage = () => {\n  const { siteUrl } = useSiteMetadata();\n  return (\n    <Layout>\n      <h1 className=\"f-headline\">404</h1>\n      <p>This page doesn&#39;t exist.</p>\n      <p className=\"moon-gray\">\n        If you wanna more message, you could visit{' '}\n        <a className=\"moon-gray b\" href={siteUrl}>\n          {siteUrl}\n        </a>\n      </p>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n"],"names":["Link","React","useSiteMetadata","Header","logo","siteUrl","navLinks","marginTop","map","n","i","url","name","PropTypes","Helmet","styles","Layout","children","siteTitle","description","class","body","propTypes","node","isRequired","useStaticQuery","site","siteMetadata","NotFoundPage"],"sourceRoot":""}